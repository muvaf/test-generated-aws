// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1
import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

)

type AccessControlPolicy struct {
	Owner *Owner `json:"owner,omitempty"`
}

type AnalyticsAndOperator struct {
	Prefix *string `json:"prefix,omitempty"`
}

type AnalyticsFilter struct {
	Prefix *string `json:"prefix,omitempty"`
}

type AnalyticsS3BucketDestination struct {
	Bucket *string `json:"bucket,omitempty"`
	BucketAccountID *string `json:"bucketAccountID,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

type Bucket_SDK struct {
	CreationDate *metav1.Time `json:"creationDate,omitempty"`
	Name *string `json:"name,omitempty"`
}

type CommonPrefix struct {
	Prefix *string `json:"prefix,omitempty"`
}

type CreateBucketConfiguration struct {
	LocationConstraint *string `json:"locationConstraint,omitempty"`
}

type DeleteMarkerEntry struct {
	Key *string `json:"key,omitempty"`
	Owner *Owner `json:"owner,omitempty"`
}

type DeletedObject struct {
	Key *string `json:"key,omitempty"`
}

type Destination struct {
	Account *string `json:"account,omitempty"`
	Bucket *string `json:"bucket,omitempty"`
	StorageClass *string `json:"storageClass,omitempty"`
}

type Encryption struct {
	EncryptionType *string `json:"encryptionType,omitempty"`
	KMSKeyID *string `json:"kmsKeyID,omitempty"`
}

type Error struct {
	Key *string `json:"key,omitempty"`
}

type ErrorDocument struct {
	Key *string `json:"key,omitempty"`
}

type Grantee struct {
	DisplayName *string `json:"displayName,omitempty"`
	ID *string `json:"id,omitempty"`
}

type Initiator struct {
	DisplayName *string `json:"displayName,omitempty"`
	ID *string `json:"id,omitempty"`
}

type InventoryFilter struct {
	Prefix *string `json:"prefix,omitempty"`
}

type InventoryS3BucketDestination struct {
	AccountID *string `json:"accountID,omitempty"`
	Bucket *string `json:"bucket,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

type LifecycleRule struct {
	ID *string `json:"id,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

type LifecycleRuleAndOperator struct {
	Prefix *string `json:"prefix,omitempty"`
}

type LifecycleRuleFilter struct {
	Prefix *string `json:"prefix,omitempty"`
}

type Location struct {
	BucketName *string `json:"bucketName,omitempty"`
	CannedACL *string `json:"cannedACL,omitempty"`
	StorageClass *string `json:"storageClass,omitempty"`
}

type MetadataEntry struct {
	Value *string `json:"value,omitempty"`
}

type MetricsAndOperator struct {
	Prefix *string `json:"prefix,omitempty"`
}

type MetricsFilter struct {
	Prefix *string `json:"prefix,omitempty"`
}

type MultipartUpload_SDK struct {
	Initiated *metav1.Time `json:"initiated,omitempty"`
	Initiator *Initiator `json:"initiator,omitempty"`
	Key *string `json:"key,omitempty"`
	Owner *Owner `json:"owner,omitempty"`
	StorageClass *string `json:"storageClass,omitempty"`
	UploadID *string `json:"uploadID,omitempty"`
}

type Object struct {
	Key *string `json:"key,omitempty"`
	Owner *Owner `json:"owner,omitempty"`
}

type ObjectIdentifier struct {
	Key *string `json:"key,omitempty"`
}

type ObjectLockLegalHold struct {
	Status *string `json:"status,omitempty"`
}

type ObjectVersion struct {
	Key *string `json:"key,omitempty"`
	Owner *Owner `json:"owner,omitempty"`
}

type OutputLocation struct {
	S3 *Location `json:"s3,omitempty"`
}

type Owner struct {
	DisplayName *string `json:"displayName,omitempty"`
	ID *string `json:"id,omitempty"`
}

type ReplicationRule struct {
	ID *string `json:"id,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

type ReplicationRuleAndOperator struct {
	Prefix *string `json:"prefix,omitempty"`
}

type ReplicationRuleFilter struct {
	Prefix *string `json:"prefix,omitempty"`
}

type Rule struct {
	ID *string `json:"id,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

type SSEKMS struct {
	KeyID *string `json:"keyID,omitempty"`
}

type ServerSideEncryptionByDefault struct {
	KMSMasterKeyID *string `json:"kmsMasterKeyID,omitempty"`
	SSEAlgorithm *string `json:"sseAlgorithm,omitempty"`
}

type Tag struct {
	Key *string `json:"key,omitempty"`
}